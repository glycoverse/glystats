% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/roc.R
\name{gly_roc}
\alias{gly_roc}
\title{ROC Analysis for Glycomics and Glycoproteomics Data}
\usage{
gly_roc(exp, group_col = "group", pos_class = NULL)
}
\arguments{
\item{exp}{A \code{glyexp::experiment()} object containing expression matrix and sample information.}

\item{group_col}{A character string specifying the column name of the grouping variable
in the sample information. Default is \code{"group"}. The grouping variable must have
exactly 2 levels for binary classification.}

\item{pos_class}{A character string specifying which group level should be treated as
the positive class. If \code{NULL} (default), the second level (alphabetically) will be
used as the positive class.}
}
\value{
A list containing two elements:
\itemize{
\item \code{auc}: A named numeric vector of AUC values for each variable
\item \code{thresholds}: A tibble containing ROC curve coordinates with columns:
\itemize{
\item \code{variable}: Variable name
\item \code{threshold}: Threshold value
\item \code{sensitivity}: Sensitivity (True Positive Rate)
\item \code{specificity}: Specificity (True Negative Rate)
}
}
}
\description{
Perform Receiver Operating Characteristic (ROC) analysis for binary classification
of glycomics or glycoproteomics data. The function calculates ROC curves and
Area Under the Curve (AUC) values for each variable to assess their discriminatory
power between two groups.
}
\details{
For each variable, a ROC curve is computed using the expression values as predictor
and the binary group labels as response.

The function requires exactly 2 groups in the specified grouping variable. If more than
2 groups are present, an error will be thrown.

\strong{Underlying Function:}
\itemize{
\item ROC analysis is performed using \code{pROC::roc()}
\item Coordinates are extracted using \code{pROC::coords()}
}
}
\examples{
\dontrun{
# Create example experiment object with 2 groups
sample_info <- tibble::tibble(
  sample = paste0("S", 1:20),
  group = rep(c("Control", "Treatment"), each = 10)
)

var_info <- tibble::tibble(
  variable = paste0("Glycan_", 1:100)
)

expr_mat <- matrix(rnorm(2000), nrow = 100, ncol = 20)
rownames(expr_mat) <- var_info$variable
colnames(expr_mat) <- sample_info$sample

exp <- glyexp::experiment(
  expr_mat = expr_mat,
  sample_info = sample_info,
  var_info = var_info,
  exp_type = "glycomics",
  glycan_type = "N"
)

# Perform ROC analysis
result <- gly_roc(exp, group_col = "group", pos_class = "Treatment")

# View AUC values
head(result$auc)

# View ROC curve coordinates for first variable
result$thresholds |> 
  dplyr::filter(variable == names(result$auc)[1])
}

}
